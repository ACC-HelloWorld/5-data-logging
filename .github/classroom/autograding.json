{
    "tests": [
      {
        "name": "MongoDB Credentials (env vars)",
        "setup": "sudo -H pip3 install -r requirements.txt",
        "run": ". ./setenv.sh && pytest mongodb_credentials_test.py::test_env_vars_exists",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 0
      },
      {
        "name": "AWS API Gateway Credentials (env vars)",
        "setup": "sudo -H pip3 install -r requirements.txt",
        "run": ". ./setenv.sh && pytest aws_credentials_test.py::test_env_vars_exists",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 0
      },
      {
        "name": "MongoDB Connection Test",
        "setup": "sudo -H pip3 install -r requirements.txt",
        "run": ". ./setenv.sh && pytest mongodb_credentials_test.py::test_mongodb_connection",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 2
      },
      {
        "name": "AWS API Gateway Connection Test",
        "setup": "sudo -H pip3 install -r requirements.txt",
        "run": ". ./setenv.sh && pytest aws_credentials_test.py::test_aws_api",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 2
      },
      {
        "name": "Upload data using AWS API Gateway on microcontroller",
        "setup": "sudo -H pip3 install -r requirements.txt",
        "run": ". ./setenv.sh && pytest insert_test.py",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 3
      },
      {
        "name": "Extract and save data via MongoDB",
        "setup": "sudo -H pip3 install -r requirements.txt",
        "run": ". ./setenv.sh && pytest find_test.py",
        "input": "",
        "output": "",
        "comparison": "exact",
        "timeout": 5,
        "points": 3
      }
    ]
}
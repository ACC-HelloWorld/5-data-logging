{
    "tests": [
        {
            "name": "MongoDB Credentials (env vars)",
            "setup": "sudo -H pip3 install -r requirements.txt",
            "run": ". ./setenv.sh && pytest mongodb_credentials_test.py::test_env_vars_exists",
            "input": "",
            "output": "",
            "comparison": "exact",
            "timeout": 5,
            "points": 0
        },
        {
            "name": "MongoDB Credentials (PyMongo connection)",
            "setup": "sudo -H pip3 install -r requirements.txt",
            "run": ". ./setenv.sh && pytest mongodb_credentials_test.py::test_connection",
            "input": "",
            "output": "",
            "comparison": "exact",
            "timeout": 5,
            "points": 2
        },
        {
            "name": "MongoDB Credentials (Data API)",
            "setup": "sudo -H pip3 install -r requirements.txt",
            "run": ". ./setenv.sh && pytest mongodb_credentials_test.py::test_data_api",
            "input": "",
            "output": "",
            "comparison": "exact",
            "timeout": 5,
            "points": 2
        },
        {
            "name": "Upload data using Data API on microcontroller",
            "setup": "sudo -H pip3 install -r requirements.txt",
            "run": ". ./setenv.sh && pytest insert_test.py",
            "input": "",
            "output": "",
            "comparison": "exact",
            "timeout": 5,
            "points": 3
        },
        {
            "name": "Extract and save data via PyMongo",
            "setup": "sudo -H pip3 install -r requirements.txt",
            "run": ". ./setenv.sh && pytest find_test.py",
            "input": "",
            "output": "",
            "comparison": "exact",
            "timeout": 5,
            "points": 3
        }
    ]
}